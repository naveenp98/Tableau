<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='all'>
      <format attr='font-family' value='Uber Move' />
      <format attr='color' value='#000000' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='Uber Requests Extract' inline='true' name='federated.00kx39s1y81zm61d2238v0muewxw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Uber Requests' name='hyper.06xssyz02us8rp1ao1gmb0yh69kn'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/naveenmsu/Documents/My Tableau Prep Repository/Datasources/Uber Requests.hyper' default-settings='yes' server='' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='hyper.06xssyz02us8rp1ao1gmb0yh69kn' name='Extract' table='[Extract].[Extract]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='hyper.06xssyz02us8rp1ao1gmb0yh69kn' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Request id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Request id]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Request id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6745</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_234646103398423A9FBC3DF2A61EB8DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pickup point</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pickup point]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Pickup point</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_234646103398423A9FBC3DF2A61EB8DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Driver id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Driver id]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Driver id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>420</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_234646103398423A9FBC3DF2A61EB8DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_234646103398423A9FBC3DF2A61EB8DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Request timestamp</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Request timestamp]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Request timestamp</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>3358</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_234646103398423A9FBC3DF2A61EB8DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Drop timestamp</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Drop timestamp]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Drop timestamp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>2006</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_234646103398423A9FBC3DF2A61EB8DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Number of Requests' datatype='integer' name='[Calculation_1101411639563026432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Request id])' />
      </column>
      <column caption='Number of Unique Drivers' datatype='integer' name='[Calculation_1101411639563321345]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Driver id])' />
      </column>
      <column datatype='string' datatype-customized='true' name='[Driver id]' role='dimension' type='nominal' />
      <column caption='Request Time of Day' datatype='string' name='[Request Hour (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Request Hour]' new-bin='true'>
          <bin default-name='false' value='&quot;Early Morning&quot;'>
            <value>4</value>
            <value>5</value>
            <value>6</value>
            <value>7</value>
          </bin>
          <bin default-name='false' value='&quot;Evening&quot;'>
            <value>16</value>
            <value>17</value>
            <value>18</value>
            <value>19</value>
          </bin>
          <bin default-name='false' value='&quot;Late Night&quot;'>
            <value>0</value>
            <value>1</value>
            <value>2</value>
            <value>3</value>
          </bin>
          <bin default-name='false' value='&quot;Morning&quot;'>
            <value>8</value>
            <value>9</value>
            <value>10</value>
            <value>11</value>
          </bin>
          <bin default-name='false' value='&quot;Night&quot;'>
            <value>20</value>
            <value>21</value>
            <value>22</value>
            <value>23</value>
          </bin>
          <bin default-name='false' value='&quot;Noon&quot;'>
            <value>12</value>
            <value>13</value>
            <value>14</value>
            <value>15</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Request Hour]' role='dimension' type='ordinal' user:agg-type='Hour' user:base-field='Request timestamp' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [Request timestamp])' />
      </column>
      <column datatype='integer' name='[Request id]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Status]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Extract' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_234646103398423A9FBC3DF2A61EB8DC]' role='measure' type='quantitative' />
      <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
      <group caption='Action (Request Time of Day,Status)' hidden='true' name='[Action (Request Time of Day,Status)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Request Hour (group)]' />
          <groupfilter function='level-members' level='[Status]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Request Hour (group)]' palette='gray_warm_10_0' type='palette'>
            <map to='#3aa76d'>
              <bucket>&quot;Early Morning&quot;</bucket>
            </map>
            <map to='#7356bf'>
              <bucket>&quot;Late Night&quot;</bucket>
            </map>
            <map to='#99644d'>
              <bucket>&quot;Night&quot;</bucket>
            </map>
            <map to='#d44333'>
              <bucket>&quot;Evening&quot;</bucket>
            </map>
            <map to='#ed6e33'>
              <bucket>&quot;Noon&quot;</bucket>
            </map>
            <map to='#ffc043'>
              <bucket>&quot;Morning&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Status:nk]' palette='seattle_grays_10_0' type='palette'>
            <map to='#555555'>
              <bucket>&quot;Trip Completed&quot;</bucket>
            </map>
            <map to='#7356bf'>
              <bucket>&quot;Cancelled&quot;</bucket>
            </map>
            <map to='#797979'>
              <bucket>&quot;No Cars Available&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Request id' />
        <field-sort-custom-order field='Calculation_1101411639563026432' />
        <field-sort-custom-order field='Pickup point' />
        <field-sort-custom-order field='Driver id' />
        <field-sort-custom-order field='Calculation_1101411639563321345' />
        <field-sort-custom-order field='Status' />
        <field-sort-custom-order field='Request timestamp' />
        <field-sort-custom-order field='Request timestamp (copy)_1101411639568171012' />
        <field-sort-custom-order field='Calculation_1101411639567753219' />
        <field-sort-custom-order field='Drop timestamp' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Extract' id='Extract (Extract.Extract)_234646103398423A9FBC3DF2A61EB8DC'>
            <properties context=''>
              <relation connection='hyper.06xssyz02us8rp1ao1gmb0yh69kn' name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_2DAA8EA7D9EC42DB9FDFA302CB745C72]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Uber Dashboard' type='sheet' worksheet='Canceled Rides Graphic' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Uber Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Canceled Rides Graphic'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff'>Canceled Rides</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Uber Requests Extract' name='federated.00kx39s1y81zm61d2238v0muewxw' />
          </datasources>
          <datasource-dependencies datasource='federated.00kx39s1y81zm61d2238v0muewxw'>
            <column caption='Number of Requests' datatype='integer' name='[Calculation_1101411639563026432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Request id])' />
            </column>
            <column caption='Request Time of Day' datatype='string' name='[Request Hour (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Request Hour]' new-bin='true'>
                <bin default-name='false' value='&quot;Early Morning&quot;'>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                  <value>7</value>
                </bin>
                <bin default-name='false' value='&quot;Evening&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                </bin>
                <bin default-name='false' value='&quot;Morning&quot;'>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                </bin>
                <bin default-name='false' value='&quot;Night&quot;'>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                </bin>
                <bin default-name='false' value='&quot;Noon&quot;'>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Request Hour]' role='dimension' type='ordinal' user:agg-type='Hour' user:base-field='Request timestamp' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [Request timestamp])' />
            </column>
            <column datatype='integer' name='[Request id]' role='dimension' type='ordinal' />
            <column datatype='datetime' name='[Request timestamp]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1101411639563026432]' derivation='User' name='[usr:Calculation_1101411639563026432:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Cancelled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00kx39s1y81zm61d2238v0muewxw].[usr:Calculation_1101411639563026432:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.00kx39s1y81zm61d2238v0muewxw].[usr:Calculation_1101411639563026432:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00kx39s1y81zm61d2238v0muewxw].[usr:Calculation_1101411639563026432:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00kx39s1y81zm61d2238v0muewxw].[Request Hour (group)]' />
              <lod column='[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#7356bf' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.00kx39s1y81zm61d2238v0muewxw].[usr:Calculation_1101411639563026432:qk]</cols>
      </table>
      <simple-id uuid='{FD268E81-01A1-453B-949D-020ADF1236DE}' />
    </worksheet>
    <worksheet name='Number of Unique Drivers'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Uber Requests Extract' name='federated.00kx39s1y81zm61d2238v0muewxw' />
          </datasources>
          <datasource-dependencies datasource='federated.00kx39s1y81zm61d2238v0muewxw'>
            <column caption='Number of Unique Drivers' datatype='integer' name='[Calculation_1101411639563321345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Driver id])' />
            </column>
            <column datatype='string' datatype-customized='true' name='[Driver id]' role='dimension' type='nominal' />
            <column caption='Request Time of Day' datatype='string' name='[Request Hour (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Request Hour]' new-bin='true'>
                <bin default-name='false' value='&quot;Early Morning&quot;'>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                  <value>7</value>
                </bin>
                <bin default-name='false' value='&quot;Evening&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                </bin>
                <bin default-name='false' value='&quot;Morning&quot;'>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                </bin>
                <bin default-name='false' value='&quot;Night&quot;'>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                </bin>
                <bin default-name='false' value='&quot;Noon&quot;'>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Request Hour]' role='dimension' type='ordinal' user:agg-type='Hour' user:base-field='Request timestamp' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [Request timestamp])' />
            </column>
            <column datatype='datetime' name='[Request timestamp]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1101411639563321345]' derivation='User' name='[usr:Calculation_1101411639563321345:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00kx39s1y81zm61d2238v0muewxw].[Action (Request Time of Day,Status)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2DAA8EA7D9EC42DB9FDFA302CB745C72]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Request Hour (group)]' />
              <groupfilter function='level-members' level='[Status]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00kx39s1y81zm61d2238v0muewxw].[Action (Request Time of Day,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='477' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='font-size' value='22' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#555555' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00kx39s1y81zm61d2238v0muewxw].[usr:Calculation_1101411639563321345:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FD59FB4F-697A-4D16-A0E5-65F3D3F9BAF4}' />
    </worksheet>
    <worksheet name='Ride Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff'>Ride Status by Time of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Uber Requests Extract' name='federated.00kx39s1y81zm61d2238v0muewxw' />
          </datasources>
          <datasource-dependencies datasource='federated.00kx39s1y81zm61d2238v0muewxw'>
            <column caption='Number of Requests' datatype='integer' name='[Calculation_1101411639563026432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Request id])' />
            </column>
            <column caption='Request Time of Day' datatype='string' name='[Request Hour (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Request Hour]' new-bin='true'>
                <bin default-name='false' value='&quot;Early Morning&quot;'>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                  <value>7</value>
                </bin>
                <bin default-name='false' value='&quot;Evening&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                </bin>
                <bin default-name='false' value='&quot;Morning&quot;'>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                </bin>
                <bin default-name='false' value='&quot;Night&quot;'>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                </bin>
                <bin default-name='false' value='&quot;Noon&quot;'>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Request Hour]' role='dimension' type='ordinal' user:agg-type='Hour' user:base-field='Request timestamp' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [Request timestamp])' />
            </column>
            <column datatype='integer' name='[Request id]' role='dimension' type='ordinal' />
            <column datatype='datetime' name='[Request timestamp]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1101411639563026432]' derivation='User' name='[usr:Calculation_1101411639563026432:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00kx39s1y81zm61d2238v0muewxw].[Action (Request Time of Day,Status)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2DAA8EA7D9EC42DB9FDFA302CB745C72]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Request Hour (group)]' />
              <groupfilter function='level-members' level='[Status]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00kx39s1y81zm61d2238v0muewxw].[Action (Request Time of Day,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.00kx39s1y81zm61d2238v0muewxw].[Request Hour (group)]' value='350' />
            <format attr='text-align' field='[federated.00kx39s1y81zm61d2238v0muewxw].[Request Hour (group)]' value='center' />
            <format attr='vertical-align' field='[federated.00kx39s1y81zm61d2238v0muewxw].[Request Hour (group)]' value='center' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]' value='110' />
            <format attr='width' field='[federated.00kx39s1y81zm61d2238v0muewxw].[Request Hour (group)]' value='128' />
            <format attr='height' field='[federated.00kx39s1y81zm61d2238v0muewxw].[Request Hour (group)]' value='10' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-color' data-class='total' scope='rows' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.00kx39s1y81zm61d2238v0muewxw].[Request Hour (group)]' value='center' />
            <format attr='vertical-align' field='[federated.00kx39s1y81zm61d2238v0muewxw].[Request Hour (group)]' value='center' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00kx39s1y81zm61d2238v0muewxw].[usr:Calculation_1101411639563026432:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='cols' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='5' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='5' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00kx39s1y81zm61d2238v0muewxw].[usr:Calculation_1101411639563026432:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]</rows>
        <cols>[federated.00kx39s1y81zm61d2238v0muewxw].[Request Hour (group)]</cols>
      </table>
      <simple-id uuid='{8FE68C0D-554E-4FF4-80B0-67C7F6C7120E}' />
    </worksheet>
    <worksheet name='Ride Statuses'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff'>Ride Status</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Uber Requests Extract' name='federated.00kx39s1y81zm61d2238v0muewxw' />
          </datasources>
          <datasource-dependencies datasource='federated.00kx39s1y81zm61d2238v0muewxw'>
            <column caption='Number of Requests' datatype='integer' name='[Calculation_1101411639563026432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Request id])' />
            </column>
            <column datatype='string' datatype-customized='true' name='[Driver id]' role='dimension' type='nominal' />
            <column caption='Request Time of Day' datatype='string' name='[Request Hour (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Request Hour]' new-bin='true'>
                <bin default-name='false' value='&quot;Early Morning&quot;'>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                  <value>7</value>
                </bin>
                <bin default-name='false' value='&quot;Evening&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                </bin>
                <bin default-name='false' value='&quot;Morning&quot;'>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                </bin>
                <bin default-name='false' value='&quot;Night&quot;'>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                </bin>
                <bin default-name='false' value='&quot;Noon&quot;'>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Request Hour]' role='dimension' type='ordinal' user:agg-type='Hour' user:base-field='Request timestamp' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [Request timestamp])' />
            </column>
            <column datatype='integer' name='[Request id]' role='dimension' type='ordinal' />
            <column datatype='datetime' name='[Request timestamp]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column-instance column='[Driver id]' derivation='Count' name='[cnt:Driver id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1101411639563026432]' derivation='User' name='[usr:Calculation_1101411639563026432:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00kx39s1y81zm61d2238v0muewxw].[Action (Request Time of Day,Status)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2DAA8EA7D9EC42DB9FDFA302CB745C72]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Request Hour (group)]' />
              <groupfilter function='level-members' level='[Status]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00kx39s1y81zm61d2238v0muewxw].[Action (Request Time of Day,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00kx39s1y81zm61d2238v0muewxw].[cnt:Driver id:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='rows' value='#ffffff' />
            <format attr='color' data-class='subtotal' scope='cols' value='#ffffff' />
            <format attr='text-align' field='[federated.00kx39s1y81zm61d2238v0muewxw].[cnt:Driver id:qk]' value='center' />
            <format attr='vertical-align' field='[federated.00kx39s1y81zm61d2238v0muewxw].[cnt:Driver id:qk]' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
            <format attr='background-color' data-class='subtotal' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='rows' value='#ffffff' />
            <format attr='color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00kx39s1y81zm61d2238v0muewxw].[usr:Calculation_1101411639563026432:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
            <format attr='background-color' data-class='subtotal' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00kx39s1y81zm61d2238v0muewxw].[usr:Calculation_1101411639563026432:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#7356bf' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk] * [federated.00kx39s1y81zm61d2238v0muewxw].[cnt:Driver id:qk])</rows>
        <cols />
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]</field>
                    <field>[federated.00kx39s1y81zm61d2238v0muewxw].[cnt:Driver id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00kx39s1y81zm61d2238v0muewxw].[cnt:Driver id:qk]</field>
                  <field>[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]</field>
                  <field>[federated.00kx39s1y81zm61d2238v0muewxw].[usr:Calculation_1101411639563026432:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2831</value>
                <value>&quot;Trip Completed&quot;</value>
                <value>2831</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.506173' y='0.457143' />
          </mark-label>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]</field>
                    <field>[federated.00kx39s1y81zm61d2238v0muewxw].[cnt:Driver id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00kx39s1y81zm61d2238v0muewxw].[cnt:Driver id:qk]</field>
                  <field>[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]</field>
                  <field>[federated.00kx39s1y81zm61d2238v0muewxw].[usr:Calculation_1101411639563026432:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1264</value>
                <value>&quot;Cancelled&quot;</value>
                <value>1264</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.487654' y='0.479167' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{FAC88CAB-22D5-4703-89D9-B33CC006FBE9}' />
    </worksheet>
    <worksheet name='Ride Statuses Graphic'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff'>Ride Status w.r.t Requests</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Uber Requests Extract' name='federated.00kx39s1y81zm61d2238v0muewxw' />
          </datasources>
          <datasource-dependencies datasource='federated.00kx39s1y81zm61d2238v0muewxw'>
            <column caption='Number of Requests' datatype='integer' name='[Calculation_1101411639563026432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Request id])' />
            </column>
            <column datatype='string' datatype-customized='true' name='[Driver id]' role='dimension' type='nominal' />
            <column caption='Request Time of Day' datatype='string' name='[Request Hour (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Request Hour]' new-bin='true'>
                <bin default-name='false' value='&quot;Early Morning&quot;'>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                  <value>7</value>
                </bin>
                <bin default-name='false' value='&quot;Evening&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                </bin>
                <bin default-name='false' value='&quot;Late Night&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                </bin>
                <bin default-name='false' value='&quot;Morning&quot;'>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                </bin>
                <bin default-name='false' value='&quot;Night&quot;'>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                </bin>
                <bin default-name='false' value='&quot;Noon&quot;'>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Request Hour]' role='dimension' type='ordinal' user:agg-type='Hour' user:base-field='Request timestamp' user:ui-builder='date-bin-builder'>
              <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [Request timestamp])' />
            </column>
            <column datatype='integer' name='[Request id]' role='dimension' type='ordinal' />
            <column datatype='datetime' name='[Request timestamp]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column-instance column='[Driver id]' derivation='None' name='[none:Driver id:ok]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1101411639563026432]' derivation='User' name='[usr:Calculation_1101411639563026432:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00kx39s1y81zm61d2238v0muewxw].[Action (Request Time of Day,Status)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2DAA8EA7D9EC42DB9FDFA302CB745C72]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Request Hour (group)]' />
              <groupfilter function='level-members' level='[Status]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00kx39s1y81zm61d2238v0muewxw].[Action (Request Time of Day,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00kx39s1y81zm61d2238v0muewxw].[usr:Calculation_1101411639563026432:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.00kx39s1y81zm61d2238v0muewxw].[usr:Calculation_1101411639563026432:qk]' />
              <lod column='[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]' />
              <text column='[federated.00kx39s1y81zm61d2238v0muewxw].[none:Driver id:ok]' />
              <color column='[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BC03695E-037B-4FA2-9A2F-ECC57DA56976}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Uber Dashboard'>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_7' value='center' />
          <format attr='text-align' id='dash-text_11' value='center' />
          <format attr='vertical-align' id='dash-text_11' value='center' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98124' id='26' param='horz' type-v2='layout-flow' w='99064' x='468' y='938'>
            <zone h='98124' id='15' type-v2='layout-basic' w='99064' x='468' y='938' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#000000' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='7000' id='11' type-v2='text' w='14200' x='84900' y='1250'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontsize='28'>Uber</run>
          </formatted-text>
        </zone>
        <zone h='16500' id='12' name='Number of Unique Drivers' w='20500' x='1800' y='8875' />
        <zone h='17000' id='14' name='Canceled Rides Graphic' w='96800' x='1800' y='26000' />
        <zone h='16750' id='18' name='Ride Data' w='75800' x='22800' y='8625' />
        <zone h='54250' id='19' name='Ride Statuses Graphic' w='59500' x='1800' y='43750' />
        <zone h='9500' id='22' name='Ride Statuses Graphic' pane-specification-id='0' param='[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]' type-v2='color' w='14000' x='42400' y='85750' />
        <zone h='54375' id='23' name='Ride Statuses' w='35200' x='63400' y='43750' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98124' id='29' param='vert' type-v2='layout-flow' w='99064' x='468' y='938'>
                <zone forceUpdate='true' h='7000' id='11' type-v2='text' w='14200' x='84900' y='1250'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#ffffff' fontsize='28'>Uber</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='134' h='16750' id='18' is-fixed='true' name='Ride Data' w='75800' x='22800' y='8625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='132' h='16500' id='12' is-fixed='true' name='Number of Unique Drivers' w='20500' x='1800' y='8875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='136' h='17000' id='14' is-fixed='true' name='Canceled Rides Graphic' w='96800' x='1800' y='26000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54250' id='19' is-fixed='true' name='Ride Statuses Graphic' w='59500' x='1800' y='43750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9500' id='22' name='Ride Statuses Graphic' pane-specification-id='0' param='[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]' type-v2='color' w='14000' x='42400' y='85750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54375' id='23' is-fixed='true' name='Ride Statuses' w='35200' x='63400' y='43750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#000000' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A283E8E0-08AC-4CB3-9765-F30D146C8901}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Uber Dashboard'>
      <viewpoints>
        <viewpoint name='Canceled Rides Graphic'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.00kx39s1y81zm61d2238v0muewxw].[Request Hour (group)]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Number of Unique Drivers'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ride Data'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ride Statuses'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ride Statuses Graphic'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='19' />
      <simple-id uuid='{8588C8C6-2851-4AD3-8328-8532DDE57648}' />
    </window>
    <window class='worksheet' hidden='true' name='Canceled Rides Graphic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00kx39s1y81zm61d2238v0muewxw].[Request Hour (group)]</field>
            <field>[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]</field>
            <field>[federated.00kx39s1y81zm61d2238v0muewxw].[usr:Calculation_1101411639563321345:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32D89F1A-781D-4BB5-91A9-EC982B75B37C}' />
    </window>
    <window class='worksheet' hidden='true' name='Number of Unique Drivers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{C24028C3-1D19-4099-9C1D-EB01E404D94F}' />
    </window>
    <window class='worksheet' hidden='true' name='Ride Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00kx39s1y81zm61d2238v0muewxw].[Request Hour (group)]</field>
            <field>[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]</field>
            <field>[federated.00kx39s1y81zm61d2238v0muewxw].[usr:Calculation_1101411639563321345:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E15524FB-C4C0-4612-8EB5-505CFB7AC1CB}' />
    </window>
    <window class='worksheet' hidden='true' name='Ride Statuses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.00kx39s1y81zm61d2238v0muewxw].[none:Driver id:ok]</field>
            <field>[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED69CAF8-5D14-4871-A3AD-B1807062C79E}' />
    </window>
    <window class='worksheet' hidden='true' name='Ride Statuses Graphic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00kx39s1y81zm61d2238v0muewxw].[none:Status:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53F8D5CF-C896-4A37-97AF-B9F3B6163632}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Uber Dashboard' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
